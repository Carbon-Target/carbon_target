doctype html
html
  head

    meta charset="UTF-8"
    meta name="keywords" content="Carbon target bilan carbone giec ademe environnment impact objectifs calcul"
    meta http-equiv="Content-Type" content="text/html; charset=utf-8"
    meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport"

    title Carbon Target

    link rel="stylesheet" href="style.css"

    javascript [type="module"]:
      import { Application, Controller } from "https://unpkg.com/@hotwired/stimulus/dist/stimulus.js"
      window.Stimulus = Application.start()

      Stimulus.register("carbon-item", class extends Controller {
        static targets = [ "quantity", "frequency", "result" ]
        static values = { emissionFactor: Number }

        initialize() {
          this.frequencyHash = { day: 365, week: 52, month: 12, year: 1 }
        }

        computeFrequencyFactor() {
          return this.frequencyHash[this.frequencyTarget.value]
        }

        updateResult() {
          let result = this.quantityTarget.value
            * this.computeFrequencyFactor()
            * this.emissionFactorValue

          if (result)
            result = Math.round(result)

          this.resultTarget.value = result || 0
          this.resultTarget.dispatchEvent(new Event('change'))
        }
      })

      Stimulus.register("carbon-recap", class extends Controller {
        static targets = [ "item", "total", "unit" ]

        // Sums the result of each line & updates the total
        updateResult() {
          let result = 0
          this.itemTargets.forEach(item => {
            result += parseFloat(item.value)
          })

           // Convert kg into t
          result = (result / 1000).toFixed(2)
          this.totalTarget.innerHTML = result

          if (result < 2.0) {
            this.unitTarget.innerHTML = "&nbsp;tonne"
          } else {
            this.unitTarget.innerHTML = "&nbsp;tonnes"
          }
        }
      })

    script type="text/javascript" src="javascript.js"

body class="container block is-max-desktop"
  section class="section" data-controller="carbon-recap"
    div class="content has-text-centered-desktop pb-6"
      h1 class="title is-1" Bienvenue sur Carbon Target&nbsp;!

      p Une vie à 2 tonnes, qu'est ce que ça veut dire concrètement&nbsp;?

      p Ce projet a pour but d'illustrer la nécessaire radicalité du changement de nos modes de vie à tous les niveaux.

      p Le calcul ne se base que sur 4 besoins humains "essentiels" (se déplacer, se nourrir, se loger, s'équiper) et n'est donc bien évidemment pas exhaustif.
      p Mais sans être exhaustif, vous verrez que c'est déjà loin d'être évident de tenir le fameux objectif des 2 tonnes&nbsp;!

    section class="level is-mobile"
      div class="box level-item has-text-centered has-background-primary-light"
        div
          p class="heading" Calcul
          p class="title"
            span data-carbon-recap-target="total"
              = "0"
            span class="is-hidden-tablet" t
            span class="is-hidden-mobile" data-carbon-recap-target="unit" &nbsp;tonnes


      div class="level-item has-text-centered"
        div
          p class="heading" VS

      div class="box level-item has-text-centered has-background-danger-light"
        div
          p class="heading" Cible
          p class="title"
            = "2"
            span class="is-hidden-tablet" t
            span class="is-hidden-mobile" &nbsp;tonnes

    div class="block"
      h2 class="title is-3" Se déplacer
      ul
        li data-controller="carbon-item" data-carbon-item-emission-factor-value="0.198"
          == Slim::Template.new("./src/carbon_item.slim").render({ name: "Voiture essence", id: "car-gas", unit: "km" })
        li data-controller="carbon-item" data-carbon-item-emission-factor-value="0.103"
          == Slim::Template.new("./src/carbon_item.slim").render({ name: "Voiture électrique", id: "car-elec", unit: "km" })
        li data-controller="carbon-item" data-carbon-item-emission-factor-value="0.00529"
          == Slim::Template.new("./src/carbon_item.slim").render({ name: "Train France", id: "train-france", unit: "km" })
        li data-controller="carbon-item" data-carbon-item-emission-factor-value="0.05"
          == Slim::Template.new("./src/carbon_item.slim").render({ name: "Train Europe", id: "train-euro", unit: "km" })
        li data-controller="carbon-item" data-carbon-item-emission-factor-value="0.808"
          == Slim::Template.new("./src/carbon_item.slim").render({ name: "Avion court courrier", id: "plane-short", unit: "km" })
        li data-controller="carbon-item" data-carbon-item-emission-factor-value="0.589"
          == Slim::Template.new("./src/carbon_item.slim").render({ name: "Avion moyen courrier", id: "plane-mid", unit: "km" })
        li data-controller="carbon-item" data-carbon-item-emission-factor-value="0.472"
          == Slim::Template.new("./src/carbon_item.slim").render({ name: "Avion long courrier", id: "plane-long", unit: "km" })

    div class="block"
      h2 class="title is-3" Se nourrir
      ul
        li data-controller="carbon-item" data-carbon-item-emission-factor-value="7.26"
          == Slim::Template.new("./src/carbon_item.slim").render({ name: "Repas à base de boeuf", id: "meal-beef", unit: "repas" })
        li data-controller="carbon-item" data-carbon-item-emission-factor-value="1.58"
          == Slim::Template.new("./src/carbon_item.slim").render({ name: "Repas à base de poulet", id: "meal-chicken", unit: "repas" })
        li data-controller="carbon-item" data-carbon-item-emission-factor-value="0.51"
          == Slim::Template.new("./src/carbon_item.slim").render({ name: "Repas végétariens", id: "meal-veg", unit: "repas" })

    div class="block"
      h2 class="title is-3" S'équiper
      ul
        li data-controller="carbon-item" data-carbon-item-emission-factor-value="0.6"
          == Slim::Template.new("./src/carbon_item.slim").render({ name: "Vêtements neufs", id: "clothes-new", unit: "€" })
        li data-controller="carbon-item" data-carbon-item-emission-factor-value="0.6"
          == Slim::Template.new("./src/carbon_item.slim").render({ name: "Meubles neufs", id: "furniture-new", unit: "€" })
        li data-controller="carbon-item" data-carbon-item-emission-factor-value="0.4"
          == Slim::Template.new("./src/carbon_item.slim").render({ name: "Electronique neuf", id: "elec-new", unit: "€" })

    div class="block"
      h2 class="title is-3" Se loger
      ul
        li data-controller="carbon-item" data-carbon-item-emission-factor-value="5.99"
          label for="clothes-new" class="label mt-3"
            = "Consommation électrique logement"


          div class="columns is-mobile"
            div class="column is-three-fifths"
              div class="field has-addons"
                div class="control"
                  input id="clothes-new" class="input" type="number" data-action="keyup->carbon-item#updateResult" data-carbon-item-target="quantity"

                div class="control"
                  div class="select"
                    select data-carbon-item-target="frequency" data-action="change->carbon-item#updateResult"
                      option value="year"
                        = "m²"

            div class="column"

            div class="column is-one-fifth"
              div class="field"
                div class="control"
                  input class="input has-text-centered" type="number" value="0" readonly="readonly" data-carbon-item-target="result" data-carbon-recap-target="item" data-action="change->carbon-recap#updateResult"

  section class="section"
    div class="content has-text-centered-desktop pb-6"
      p class="has-text-centered-desktop"
        = "Carbon Target est un projet citoyen open source qui se base sur les données de l'ADEME (Bilan GES). Il s'agit pour l'instant d'un MVP basique et largement améliorable, qui a pour objectif de lancer une dynamique. En effet, nous serions ravis que des initiatives ou des institutions plus grandes et plus légitimes que nous (Shift Project, Datagir.Ademe.fr, Convention des Entreprises pour le Climat, MyCO2 by Carbone 4, Atelier 2 tonnes, …) aient envie de s'approprier cette idée simple pour la faire vivre et lui donner une autre dimension."

      p class="has-text-centered-desktop"
       | Que vous souhaitiez qu'on vous aide à intégrer Carbon Target à un de vos projets ou que vous souhaitiez reprendre l'idée à votre compte, n'hésitez pas à nous contacter à <a href="mailto:hello@carbontarget.earth">hello@carbontarget.earth</a> !
  